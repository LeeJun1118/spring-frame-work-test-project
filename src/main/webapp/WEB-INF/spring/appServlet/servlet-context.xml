<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

<!--    Annotation 활성화 : 안한면 bean 을 하나하나 다 등록해야한다.-->
    <mvc:annotation-driven/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>

<!--    Component 패키지 지정 :  패키지 지정을 안해주면 spring-framework 가 scan 을 못해 작동하지 않는다.-->
    <context:component-scan base-package="com.jun.spring_test"/>

<!--    constructor-arg : 생성자의 가변인자에 값을 할당한다. -->
    <bean id="cons_Id" class="com.jun.spring_test.controller.xmlTest.ConstructorTest">
        <constructor-arg value="참조값입니다."/>
    </bean>
<!--값이 할당된 bean 을 넘겨 받는다.-->
    <bean id="myResult" class="com.jun.spring_test.controller.xmlTestController.TestController">
        <constructor-arg ref="cons_Id"/>
    </bean>
<!-- 값을 바로 넣어서 실행한다.  -->
    <bean id="test2" class="com.jun.spring_test.controller.xmlTestController.TestController">
        <constructor-arg value="value 값입니다."/>
    </bean>


<!--    Property : 필드, 클래스 변수, 인스턴스 변수를 의미하며 setter 로 값을 할당한다.-->
    <bean id="prop_id" class="com.jun.spring_test.controller.xmlTest.PropertyTest">
        <!--<property name="result">
            <value type="java.lang.String">Property 결과</value>
        </property>-->
        <property name="result" value="Property 결과"/>
    </bean>
    <bean id="prop_result" class="com.jun.spring_test.controller.xmlTestController.TestController">
        <constructor-arg ref="prop_id"/>
    </bean>

<!--    Property list -->
<!--    scope="prototype" 으로 아래의 빈이 호출될 때마다 새 인스턴스가 생성되어 여러개의 인스턴스가 생성된다. -->
<!--    scope 설정이 없다면 default 로 singleton 이 설정되어 하나의 인스턴스만 생성된다. -->
    <bean id="prop_list" class="com.jun.spring_test.controller.xmlTest.PropertyListTest" scope="prototype">
        <property name="resultList">
            <list>
                <value>Property</value>
                <value>list</value>
                <value>결과</value>
            </list>
        </property>
    </bean>
    <bean id="prop_list_result" class="com.jun.spring_test.controller.xmlTestController.TestController">
        <constructor-arg ref="prop_list"/>
    </bean>

<!--    Property List Ref-->
    <bean id="prop_list_ref" class="com.jun.spring_test.controller.xmlTest.PropertyListTest">
        <property name="resultListRef">
            <list>
                <ref bean="prop_list"/>
            </list>
        </property>
    </bean>
    <bean id="prop_list_result_ref" class="com.jun.spring_test.controller.xmlTestController.TestController">
        <constructor-arg ref="prop_list_ref"/>
    </bean>

<!--    Property Set-->
    <bean id="prop_set" class="com.jun.spring_test.controller.xmlTest.PropertySetTest">
        <property name="result">
            <set>
                <value>문자열</value>
                <value>Set 의 특성상 중복 주입 안됨</value>
                <value>중복 주입 안됨</value>
                <value>중복 주입 안됨</value>
                <value>중복 주입 안됨</value>
            </set>
        </property>
    </bean>
    <bean id="prop_list_result_set" class="com.jun.spring_test.controller.xmlTestController.TestController">
        <constructor-arg ref="prop_set"/>
    </bean>
</beans>